
	---------------------------------------------------

    1. Interface / Abstraction
       
        why we need ?
        -> easy to use/learn by dependent
        -> loose coupling b/w dependent & dependency

    2. Implementation / Encapsulation
        
        why we need ?
        - to hide complexity
        
   ---------------------------------------------------
   
   how to implement in java ?
   
   many ways 
   
   	-> class & interfaces
   	-> using access specifiers & packages
   	-> using set & get methods
   	
   	-> using proper OO principles & patterns
   	
   	
   ---------------------------------------------------
   
   e.g
   
   	   TestDrive app
   	   
   	   	a. car
   	   	     - move()
   	   	     
   	   	b. wheel     
             - rotate()
   
   ---------------------------------------------------
   
   access specifiers
   
   
    proj
    
    	- p1
    		A.java
    		B.java extends A.java
    		C.java
    	
    	- p2
    		D.java extends A.java
    		E.java
   
   
		   --------------------------------------------------------------------
		   same-package                               other-package
		   --------------------------------------------------------------------
		   same-type  sub-type  other-type           sub-type    other-type
		   --------------------------------------------------------------------
private       Y         N            N                 N             N
(     )       Y         Y            Y                 N             N 	
protected     Y         Y            Y                 Y             N	   
public        Y         Y            Y                 Y             Y

	   
		   
		   
   
   
   
   
   
   
   
   
   
   
        